// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // @@index([email], type: Hash)
  // @@map("users")
}

model Store {
  id         String      @id @default(cuid())
  name       String
  userId     String      @map("user_id")
  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[]  @relation("StoreToCategory")
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")
}

model Billboard {
  id         String     @id @default(cuid())
  name       String
  storeId    String     @map("store_id")
  imageUrl   String     @map("image_url")
  categories Category[] @relation("BillboardToCategory")
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")

  store Store @relation("StoreToBillboard", fields: [storeId], references: [id])

  @@index([storeId])
}

model Category {
  id          String   @id @default(cuid())
  name        String
  storeId     String   @map("store_id")
  billboardId String   @map("billboard_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  store     Store     @relation("StoreToCategory", fields: [storeId], references: [id])
  billboard Billboard @relation("BillboardToCategory", fields: [billboardId], references: [id])

  @@index([storeId])
  @@index([billboardId])
}
